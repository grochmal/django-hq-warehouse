# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-06 14:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.BigIntegerField(db_index=True, editable=False, help_text='original batch of data load', verbose_name='batch id')),
                ('origin_id', models.BigIntegerField(editable=False, help_text='id of original item in the stage database', verbose_name='origin id')),
                ('insert_date', models.DateTimeField(blank=True, editable=False, help_text='insert timestamp of this row in the warehouse', verbose_name='insert date')),
                ('code', models.CharField(help_text='iso 4217 currency code', max_length=3, unique=True, verbose_name='code')),
                ('name', models.CharField(help_text='plain text name of the currency', max_length=64, verbose_name='name')),
            ],
            options={
                'verbose_name': 'currency',
                'verbose_name_plural': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='Forex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.BigIntegerField(db_index=True, editable=False, help_text='original batch of data load', verbose_name='batch id')),
                ('origin_id', models.BigIntegerField(editable=False, help_text='id of original item in the stage database', verbose_name='origin id')),
                ('insert_date', models.DateTimeField(blank=True, editable=False, help_text='insert timestamp of this row in the warehouse', verbose_name='insert date')),
                ('date_valid', models.DateField(help_text='date for which this rate can be applied', verbose_name='date valid')),
                ('rate', models.DecimalField(decimal_places=10, max_digits=20, verbose_name='exchange rate')),
                ('currency_from', models.ForeignKey(help_text='currency from which the exchange is made', on_delete=django.db.models.deletion.CASCADE, related_name='forex_from', to='hq_warehouse.Currency', verbose_name='currency from')),
                ('currency_to', models.ForeignKey(help_text='currency to which the exchange is made', on_delete=django.db.models.deletion.CASCADE, related_name='forex_to', to='hq_warehouse.Currency', verbose_name='currency to')),
            ],
            options={
                'verbose_name': 'foreign exchange rate',
                'verbose_name_plural': 'foreign exchange rates',
            },
        ),
        migrations.CreateModel(
            name='InvalidOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.BigIntegerField(db_index=True, editable=False, help_text='original batch of data load', verbose_name='batch id')),
                ('origin_id', models.BigIntegerField(editable=False, help_text='id of original item in the stage database', verbose_name='origin id')),
                ('insert_date', models.DateTimeField(blank=True, editable=False, help_text='insert timestamp of this row in the warehouse', verbose_name='insert date')),
                ('hotel_id', models.PositiveIntegerField(help_text='the hotel providing the offer', verbose_name='hotel id')),
                ('price_usd', models.DecimalField(decimal_places=10, help_text='price converted to american dollars', max_digits=20, verbose_name='prince in usd')),
                ('original_price', models.DecimalField(decimal_places=10, help_text='original price of the offer', max_digits=20, verbose_name='original price')),
                ('breakfast_included', models.BooleanField(help_text='whether breakfast is included in the price', verbose_name='breakfast included')),
                ('valid_from_date', models.DateField(db_index=True, help_text='date from which this offer is valid', verbose_name='valid from date')),
                ('valid_to_date', models.DateField(db_index=True, help_text='date when this offer becomes invalid', verbose_name='valid to date')),
                ('valid_from_time', models.TimeField(help_text='time of the day this offer becomes valid', verbose_name='valid from time')),
                ('valid_to_time', models.TimeField(help_text='time of day this offer becomes invalid', verbose_name='valid to time')),
                ('checkin_date', models.DateField(help_text='date the guest must check-in', verbose_name='check-in date')),
                ('checkout_date', models.DateField(help_text='date the guest must check-out', verbose_name='check-out date')),
                ('original_currency', models.ForeignKey(help_text='currency of the original price', on_delete=django.db.models.deletion.CASCADE, related_name='invalidoffer_set', to='hq_warehouse.Currency', verbose_name='original currency')),
            ],
            options={
                'verbose_name': 'invalid offer',
                'verbose_name_plural': 'invalid offers',
            },
        ),
        migrations.CreateModel(
            name='ValidOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.BigIntegerField(db_index=True, editable=False, help_text='original batch of data load', verbose_name='batch id')),
                ('origin_id', models.BigIntegerField(editable=False, help_text='id of original item in the stage database', verbose_name='origin id')),
                ('insert_date', models.DateTimeField(blank=True, editable=False, help_text='insert timestamp of this row in the warehouse', verbose_name='insert date')),
                ('hotel_id', models.PositiveIntegerField(help_text='the hotel providing the offer', verbose_name='hotel id')),
                ('price_usd', models.DecimalField(decimal_places=10, help_text='price converted to american dollars', max_digits=20, verbose_name='prince in usd')),
                ('original_price', models.DecimalField(decimal_places=10, help_text='original price of the offer', max_digits=20, verbose_name='original price')),
                ('breakfast_included', models.BooleanField(help_text='whether breakfast is included in the price', verbose_name='breakfast included')),
                ('valid_from_date', models.DateField(db_index=True, help_text='date from which this offer is valid', verbose_name='valid from date')),
                ('valid_to_date', models.DateField(db_index=True, help_text='date when this offer becomes invalid', verbose_name='valid to date')),
                ('valid_from_time', models.TimeField(help_text='time of the day this offer becomes valid', verbose_name='valid from time')),
                ('valid_to_time', models.TimeField(help_text='time of day this offer becomes invalid', verbose_name='valid to time')),
                ('checkin_date', models.DateField(help_text='date the guest must check-in', verbose_name='check-in date')),
                ('checkout_date', models.DateField(help_text='date the guest must check-out', verbose_name='check-out date')),
                ('invalid', models.BooleanField(db_index=True, default=False, help_text='marked when the offer becomes invalid', verbose_name='invalid')),
                ('original_currency', models.ForeignKey(help_text='currency of the original price', on_delete=django.db.models.deletion.CASCADE, related_name='validoffer_set', to='hq_warehouse.Currency', verbose_name='original currency')),
            ],
            options={
                'verbose_name': 'valid offer',
                'verbose_name_plural': 'valid offers',
            },
        ),
        migrations.AlterUniqueTogether(
            name='validoffer',
            unique_together=set([('hotel_id', 'breakfast_included', 'checkin_date', 'checkout_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='invalidoffer',
            unique_together=set([('hotel_id', 'breakfast_included', 'checkin_date', 'checkout_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='forex',
            unique_together=set([('currency_from', 'currency_to', 'date_valid')]),
        ),
        migrations.AlterIndexTogether(
            name='forex',
            index_together=set([('currency_from', 'currency_to')]),
        ),
    ]
